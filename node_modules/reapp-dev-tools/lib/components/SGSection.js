'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SGSection = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _StyleguideSource = require('./StyleguideSource');

var _StyleguideSectionBody = require('./StyleguideSectionBody');

var _StyleguideSectionHeader = require('./StyleguideSectionHeader');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SGSection = exports.SGSection = (_temp = _class = function (_React$Component) {
    _inherits(SGSection, _React$Component);

    function SGSection() {
        _classCallCheck(this, SGSection);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(SGSection).apply(this, arguments));
    }

    _createClass(SGSection, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var styleguideSources = this.context.styleguideSources;


            var style = {
                marginBottom: 40
            };

            var source = null;
            styleguideSources.forEach(function (component) {
                component.sections.forEach(function (section) {
                    if (section.title === _this2.props.title) {
                        source = section.source;
                    }
                });
            });

            if (source) {
                source = _react2.default.createElement(_StyleguideSource.StyleguideSource, { lines: source });
            }

            return _react2.default.createElement(
                'div',
                { style: style },
                _react2.default.createElement(
                    _StyleguideSectionHeader.StyleguideSectionHeader,
                    null,
                    this.props.title
                ),
                _react2.default.createElement(
                    _StyleguideSectionBody.StyleguideSectionBody,
                    null,
                    this.props.children
                ),
                source
            );
        }
    }]);

    return SGSection;
}(_react2.default.Component), _class.contextTypes = {
    styleguideSources: _react2.default.PropTypes.array
}, _class.propTypes = {
    title: _react2.default.PropTypes.string,
    children: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.element, _react2.default.PropTypes.array])
}, _temp);